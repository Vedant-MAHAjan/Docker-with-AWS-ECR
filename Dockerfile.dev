# # navigate to the directory containing the Dockerfile
# # docker build -f Dockerfile.dev -t image_name:version_name (1.0/ version_1/etc) .

FROM node
WORKDIR /app
COPY package.json .
RUN npm install
COPY . .
ENV REACT_APP_NAME=myName
EXPOSE 3000
CMD ["npm", "start"]

# # these commands will create a new user and make sure the files copied are owned by the new user
# # USER node
# # COPY --chown=node:node ./app /home/app 

################################# SMALLER IMAGE USING MULTI_STAGE BUILD #######################
# # Stage 1
# FROM node:12-alpine AS build
# WORKDIR /app
# COPY package.json .
# RUN npm install
# COPY . /app
# RUN npm run build 

# # Stage 2
# FROM node:12-alpine
# WORKDIR /app
# RUN npm install -g webserver.local
# COPY --from=build /app/build ./build
# EXPOSE 3000
# CMD webserver.local -d ./build

################# SMALLEST SIZE USING NGINX ######################
# # Stage1
# FROM node:12-alpine AS build
# WORKDIR /app
# COPY package.json .
# RUN npm install
# COPY . /app
# RUN npm run build 
# # Stage2
# FROM nginx:stable-alpine
# COPY --from=build /app/build /usr/share/nginx/html
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]
